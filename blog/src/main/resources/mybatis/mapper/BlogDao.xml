<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wyy.dao.BlogDao">
    <resultMap type="Blog" id="blogMap">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="views" column="views"/>
        <result property="appreciation" column="appreciation"/>
        <result property="shareStatement" column="shareStatement"/>
        <result property="commentable" column="commentable"/>
        <result property="published" column="published"/>
        <result property="recommend" column="recommend"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>
        <association property="type" javaType="Type">
            <!--
                property是对应实体(Type)中的属性名，因为要用setter方法，
                column对应的是查出来的数据库记录的字段名(这里是type_id是因为，查询的表是blog)
             -->
            <id property="id" column="type_id"/>
            <result property="name" column="type_name"/>
        </association>
        <association property="user" javaType="User">
            <id property="id" column="uid"/>
            <result property="username" column="username"/>
            <result property="password" column="password"/>
            <result property="email" column="email"/>
            <result property="avatar" column="avatar"/>
            <result property="nickname" column="nickname"/>
        </association>
<!--        <association property="user" javaType="User">-->
<!--            <id property="id" column="id"/>-->
<!--            <result property="nickname" column="nickname"/>-->
<!--            <result property="username" column="username"/>-->
<!--            <result property="password" column="password"/>-->
<!--            <result property="email" column="email"/>-->
<!--            <result property="avatar" column="avatar"/>-->
<!--            <result property="type" column="type"/>-->
<!--            <result property="createTime" column="createTime"/>-->
<!--            <result property="updateTime" column="updateTime"/>-->
<!--        </association>-->
    </resultMap>

    <select id="getBlogById" parameterType="Blog" resultMap="blogMap">
        select b.* from t_blog b where id = #{id}
    </select>
    <select id="getBlogsByUser" parameterType="User" resultMap="blogMap">
        select b.*, t.name as type_name from t_blog b left join t_type t on b.type_id = t.id where b.user_id = #{id}
    </select>
    <select id="getAllBlogs" resultMap="blogMap">
        select b.*, u.id as uid, u.username, u.password, u.email, u.avatar, u.nickname, t.name as type_name from (t_blog b left join t_user u on b.user_id = u.id) left join t_type t on b.type_id = t.id
    </select>

    <select id="queryBlogs" resultMap="blogMap">
         select b.*, u.id as uid, u.username, u.password, u.email, u.avatar, u.nickname, t.name as type_name from (t_blog b left join t_user u on b.user_id = u.id) left join t_type t on b.type_id = t.id where b.title like #{query} or b.content like #{query}
    </select>

    <select id="getBlogsByCondition" resultMap="blogMap" parameterType="BlogQuery">
        select * from t_blog b where recommend = #{recommend}
            <if test="title != null and title != ''">
                and title like #{title}
            </if>
            <if test="typeId!= null">
                and type_id = #{typeId}
            </if>
    </select>

    <select id="getRecommendedBlog" resultMap="blogMap">
        select b.* from t_blog b where b.recommend = true;
    </select>

    <insert id="saveBlog" parameterType="Blog">
        insert into t_blog (title, content, first_picture, flag,
        views, appreciation, share_statement, commentable, published,
        recommend, create_time, update_time, type_id, user_id)
        values (#{title},#{content},#{firstPicture},#{flag},#{views},#{appreciation},
        #{shareStatement},#{commentable},#{published},#{recommend},#{createTime},
        #{updateTime},#{type.id},#{user.id})
    </insert>
    <update id="updateBlog">
        update t_blog set published = #{published},flag = #{flag} ,
        title = #{title}, content = #{content}, type_id = #{type.id},
        first_picture = #{firstPicture} , description = #{description} , recommend = #{recommend} ,
        share_statement = #{shareStatement}, appreciation = #{appreciation},
        commentable = #{commentable} ,update_time = #{updateTime} where id = #{id}
    </update>
    <delete id="deleteBlog">
        delete from t_blog where id = #{id}
    </delete>
</mapper>